import discord
import logging
import random

from discord.ext import commands

logger = logging.getLogger(__name__)


class Listener(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self._last_member = None

    @commands.Cog.listener("on_message")
    async def word_react(self, ctx):
        trigger_words = {
            "–≤–æ–π–Ω–∞": "–í–û–ô–ù–Ø–Ø–Ø–Ø–Ø!!!",
            "–∏–∑–≤–∏–Ω–∏—Ç–µ": "–ü–ò–†–û–ñ–ö–ò!!!",
            "—Å–∫–æ–ª—å–∫–æ –≤": "–î–ê –°–ö–û–õ–¨–ö–û –í –¢–ï–ë–ï –ñ–ò–ó–ù–ò?",
            "–æ–≥–æ–Ω—å": "–û–ñ–û–ì –í–°–ï–ô –ö–ò–°–¨–ö–ò!",
            "—Ç—ã –º–µ–Ω—è ":  "—Ç—ã –º–µ–Ω—è —Å–Ω–∏–º–∞–µ—à—å? ü¶á",
            "–≤—Å–µ–º —Å–ø–∞—Å–∏–±–æ, –ø–æ–∫–∞": "–í—Å–µ–º —Å–ø–∞—Å–∏–±–æ, –ø–æ–∫–∞.",
            }

        if not ctx.author.bot:
            word = next((value for key, value in trigger_words.items() if key in ctx.content.casefold()), None)
            if word:
                await ctx.channel.send(word)
                await self.bot.process_commands(ctx)

    @commands.Cog.listener("on_message")
    async def status_change(self, ctx):
        trigger_words = {
            "–≤—Å–µ–º –ø–æ–∫–∞": {
                "message": "bb, cu, <3!!!",
                "status": discord.Status.idle,
                "activity": discord.Activity(type=discord.ActivityType.listening, name="White noise"),
            },
            "—Ä–µ–∫–æ–º–µ–Ω–¥—É—é": {
                "message": "–º–æ–∂–Ω–æ –±–µ–∑ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π?",
                "status": discord.Status.idle,
                "activity": discord.Activity(type=discord.ActivityType.listening, name="White noise"),
            },
            "–≤—Å–µ–º –ø—Ä–∏–≤–µ—Ç": {
                "message": f"–ü—Ä–∏–≤–µ—Ç, {ctx.author.name}",
                "status": discord.Status.online,
                "activity": discord.Activity(type=discord.ActivityType.watching, name="Duck Tales"),
            },
            "hi all": {
                "message": f"Hello, {ctx.author.name}",
                "status": discord.Status.online,
                "activity": discord.Streaming(name="How to insert and remove contact lenses",
                                              url="https://www.youtube.com/watch?v=zwVizcDAlX0"),
            },
            "–ø–æ–≥–Ω–∞–ª–∏": {
                "message": "–ü–û–ì–ù–ê–õ–ò –ö–û–¢–ê!",
                "status": discord.Status.do_not_disturb,
                "activity": discord.Game("QC"),
            },
        }

        if not ctx.author.bot:
            scenario = next((value for key, value in trigger_words.items() if key in ctx.content.casefold()), None)
            if scenario:
                if scenario.get("message"):
                    await ctx.channel.send(scenario["message"])
                if scenario.get("status"):
                    await self.bot.change_presence(status=scenario.get("status"), activity=scenario.get("activity"))

    @commands.Cog.listener("on_message")
    async def add_reaction(self, ctx):
        react_dict = {
            "–∫–≤–∞–¥": discord.utils.get(self.bot.emojis, name="quad"),
            "–∞–ª–ª–æ": "üìû",
            "–æ–∫–Ω–æ": "ü™ü",
            " 123": "üõéÔ∏è",
            "–∫–∞–∂–µ—Ç—Å—è —á—Ç–æ": "üí©",
            "—Å–ø–∞—Ç—å": random.choice(["üí§", "üò™", "ü•±", "üõå", "üõèÔ∏è"]),
            "–ø–∏—Ä–æ–∂–∫–∏": random.choice(["ü•ê", "ü•®", "ü•Ø", "ü•Æ"]),
        }

        if not ctx.author.bot:
            emoji = next((value for key, value in react_dict.items() if key in ctx.content.casefold()), None)
            if emoji:
                await ctx.add_reaction(emoji)
                await self.bot.process_commands(ctx)

    @commands.Cog.listener("on_message")
    async def goto_bad(self, ctx):
        if not ctx.author.bot:
            if ctx.content.casefold() in ("–ø–∏", "pi"):
                await ctx.reply("–∑–¥—É–π —Å–ø–∞—Ç—å!", mention_author=True)


def setup(bot):
    bot.add_cog(Listener(bot))
